---
- name: Install Homebrew on macOS (if not exists).
  ansible.builtin.shell: |
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  args:
    creates: /opt/homebrew/bin/brew
  become: false

- name: Install packages via Homebrew.
  community.general.homebrew:
    name: "{{ item }}"
    state: present
  become: false
  loop:
    - curl
    - wget
    - git
    - tree
    - vim
    - unzip
    - make
    - jq
    - gnu-tar

- name: Install Slack
  community.general.homebrew_cask:
    name: slack
    state: present
  become: false

- name: Set real user (not root).
  set_fact:
    real_user: "{{ ansible_env.SUDO_USER | default(ansible_user_id) }}"

- name: Install Oh My Zsh if not exists.
  git:
    repo: "https://github.com/ohmyzsh/ohmyzsh.git"
    dest: "/Users/{{ real_user }}/.oh-my-zsh"
    update: no

- name: Copy default Oh My Zsh configuration.
  copy:
    src: "/Users/{{ real_user }}/.oh-my-zsh/templates/zshrc.zsh-template"
    dest: "/Users/{{ real_user }}/.zshrc"
    remote_src: yes
    force: no

- name: Configure theme in .zshrc
  lineinfile:
    path: "/Users/{{ real_user }}/.zshrc"
    regexp: '^ZSH_THEME='
    line: 'ZSH_THEME="robbyrussell"'

- name: Activate useful plugins in .zshrc
  replace:
    path: "/Users/{{ real_user }}/.zshrc"
    regexp: '^plugins=\(.*\)'
    replace: 'plugins=({{ zsh_plugins }})'

- name: Clone zsh-autosuggestions plugin
  git:
    repo: "https://github.com/zsh-users/zsh-autosuggestions.git"
    dest: "/Users/{{ real_user }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions"
    update: yes

- name: Install Rosetta 2 (Apple Silicon)
  ansible.builtin.command: softwareupdate --install-rosetta --agree-to-license
  become: true
  when: ansible_distribution == 'MacOSX' and ansible_architecture == "arm64"